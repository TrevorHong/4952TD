@page "/Game"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<svg tabindex="0" height="1000" width="2000" style="border:1px solid
 #ff0000">
    <rect x="@x"y="@y"height="10"width="10"></rect>
</svg>
<nav class="collapse d-lg-block sidebar right-sidebar-menu consistent-header-parent">
    <div class="card">
        <div class="card-header" id="headingOne">
            <button id="melee" class="btn btn-primary">test</button>
            <button id="ranged" class="btn btn-primary">test</button>
            <button id="stun" class="btn btn-primary">test</button>
            <button id="bomb" class="btn btn-primary">test</button>
        </div>
    </div>
</nav>
@code {
    int x = 50;
    int y = 50;
    
    System.Threading.Timer? timer;

    protected override void OnInitialized() {
        timer = new System.Threading.Timer(MoveAutomatically, null, TimeSpan.Zero, TimeSpan.FromMilliseconds(100));
    }

    void MoveAutomatically(object? state) {

        x++;
        y++;
        InvokeAsync(() => StateHasChanged());
    }

    // Dispose the timer when the component is disposed
    /*Task Move(KeyboardEventArgs e) {
        switch(e.Key) {
            case "ArrowDown":
                y++;
                break;
            case "ArrowUp":
                y--;
                break;
            case "ArrowLeft":
                x--;
                break;
            case "ArrowRight":
                x++;
                break;
            default:
                break;
        }
        return Task.CompletedTask;
    }*/
}